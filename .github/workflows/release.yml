name: release
on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Validate Release
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          VERSION=${GITHUB_REF#refs/tags/v}
          RELEASED_VERSIONS=$(gh release list --repo ${{ github.repository }} --json tagName --jq '.[] | .tagName')
          ERRORS=false
          if echo "${RELEASED_VERSIONS}" | grep -q "^${TAG_NAME}$"; then
            echo "::error::Version ${TAG_NAME} has already been released."
            ERRORS=true
          fi
          if ! grep -q "\[${VERSION}\]" CHANGELOG.md; then
            echo "::error::Release notes for ${VERSION} not found in CHANGELOG.md."
            ERRORS=true
          fi
          if [ "${ERRORS}" == "true" ]; then
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          ARCHIVE_NAME="release_${TAG_NAME}.tar.gz"
          ESCAPED_VERSION=$(echo "${TAG_NAME}" | sed 's/^v//;s/\./\\./g')
          sed -n "/^\[${ESCAPED_VERSION}\]/,/^\[[0-9\.]*\] /p" CHANGELOG.md | \
            sed '1,2d;$d' | \
            gh release create ${TAG_NAME} \
            --title "Kion CLI ${TAG_NAME}" \
            --verify-tag \
            --notes-file -
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout Homebrew Tap
        uses: actions/checkout@v4
        with:
          repository: 'kionsoftware/homebrew-tap'
          token: ${{ secrets.BREW_TAP_GITHUB_TOKEN }}
          path: 'homebrew-tap'

      - name: Update Homebrew Tap
        run: |
          # build our metadata
          TAG_NAME=${GITHUB_REF#refs/tags/}
          VERSION=${GITHUB_REF#refs/tags/v}
          MAJOR_MINOR_DOT=$(echo ${VERSION} | awk -F. '{print $1"."$2}')
          MAJOR_MINOR=$(echo ${VERSION} | awk -F. '{print $1 $2}')
          ARCHIVE_URL="https://github.com/kionsoftware/kion-cli/archive/${TAG_NAME}.tar.gz"
          MAINLINE=KionCli
          SUBLINE="KionCliAT${MAJOR_MINOR}"
          WARNING="This file was auto generated. DO NOT EDIT."

          # pull and checksum
          wget $ARCHIVE_URL
          CHECKSUM=$(sha256sum "${TAG_NAME}.tar.gz" | awk '{print $1}')

          # update the formula
          sed -i "s/REPLACE_VERSION/${VERSION}/g" tools/homebrew-formula-template.rb
          sed -i "s|REPLACE_ARCHIVE_URL|${ARCHIVE_URL}|g" tools/homebrew-formula-template.rb
          sed -i "s/REPLACE_CHECKSUM/${CHECKSUM}/g" tools/homebrew-formula-template.rb
          sed -i "s/REPLACE_AUTOGENERATED/${WARNING}/g" tools/homebrew-formula-template.rb

          # clone homebrew-tap and replace formula
          cp -f tools/homebrew-formula-template.rb homebrew-tap/Formula/kion-cli.rb
          sed -i "s/REPLACE_CLASSNAME/${MAINLINE}/g" homebrew-tap/Formula/kion-cli.rb

          # # make a @majorminor copy available
          # cp -f tools/homebrew-formula-template.rb homebrew-tap/Formula/kion-cli@${MAJOR_MINOR_DOT}.rb
          # sed -i "s/REPLACE_CLASSNAME/${SUBLINE}/g" homebrew-tap/Formula/kion-cli@${MAJOR_MINOR_DOT}.rb

      - name: Push Homebrew Tap
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          # commit and push
          cd homebrew-tap
          git config user.name "kionbot"
          git config user.email "noreply+kionbot@kion.io"
          git add .
          git commit -m "Automated Kion-CLI release ${TAG_NAME}"
          git push origin main
